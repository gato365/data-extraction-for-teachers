web_table_3 <- web_table2 |>
rename_with(~ str_replace(., "^_", ""), .cols = starts_with("_"))
return(web_table_3)
}
head(fn_year(2022))
fn_team_year <- function(team_name, year){
generic_url <- paste0("https://www.pro-football-reference.com/teams/",team_name,"/",year,".htm#all_games")
webpage <- generic_url %>%
rvest::read_html()
web_tables <- webpage %>%
rvest::html_table()
int_web_table <- web_tables %>%
purrr::pluck(2)
inital_col_names <- colnames(int_web_table)
first_row_names <- int_web_table[1,]
new_colnames <- paste(inital_col_names,first_row_names,sep="_") %>%
str_trim() %>%
str_to_lower()
new_colnames[6] <- "game_location"
new_colnames[21] <- "passing_yds_sk"
colnames(int_web_table) <- new_colnames
web_table1 <- int_web_table %>%
slice(2:18) |>
mutate(
across(where(~ all(grepl("^\\s*-?\\d*\\.?\\d+\\s*$", .x))), ~ as.numeric(.)))
web_table2 <- web_table1 |>
mutate(
score_rslt = as.factor(score_rslt),
game_location = case_when(
game_location == "@" ~ "away",
game_location == "" ~ "home",
TRUE ~ game_location
) %>%
as.factor()
)
web_table_3 <- web_table2 |>
rename_with(~ str_replace(., "^_", ""), .cols = starts_with("_"))
}
return(web_table_3)
fn_team_year <- function(team_name, year){
generic_url <- paste0("https://www.pro-football-reference.com/teams/",team_name,"/",year,".htm#all_games")
webpage <- generic_url %>%
rvest::read_html()
web_tables <- webpage %>%
rvest::html_table()
int_web_table <- web_tables %>%
purrr::pluck(2)
inital_col_names <- colnames(int_web_table)
first_row_names <- int_web_table[1,]
new_colnames <- paste(inital_col_names,first_row_names,sep="_") %>%
str_trim() %>%
str_to_lower()
new_colnames[6] <- "game_location"
new_colnames[21] <- "passing_yds_sk"
colnames(int_web_table) <- new_colnames
web_table1 <- int_web_table %>%
slice(2:18) |>
mutate(
across(where(~ all(grepl("^\\s*-?\\d*\\.?\\d+\\s*$", .x))), ~ as.numeric(.)))
web_table2 <- web_table1 |>
mutate(
score_rslt = as.factor(score_rslt),
game_location = case_when(
game_location == "@" ~ "away",
game_location == "" ~ "home",
TRUE ~ game_location
) %>%
as.factor()
)
web_table_3 <- web_table2 |>
rename_with(~ str_replace(., "^_", ""), .cols = starts_with("_"))
return(web_table_3)
}
head(fn_team_year(sfo, 2024))
head(fn_team_year("sfo", 2024))
library(httr2)
library(tibble)
# Set your API key and city
city_name <- "San Luis Obispo"
# Build and send the request
response <- request("http://api.openweathermap.org/geo/1.0/direct") %>%
req_url_query(
q = city_name,
limit = 5,
appid = api_key
) %>%
req_perform()
api_key <- "535c5f77ac8d68d441227811cd74308e"
# Set your API key and city
city_name <- "San Luis Obispo"
# Build and send the request
response <- request("http://api.openweathermap.org/geo/1.0/direct") %>%
req_url_query(
q = city_name,
limit = 5,
appid = api_key
) %>%
req_perform()
# Set your API key and city
city_name <- "San Luis Obispo"
# Build and send the request
response <- request("http://api.openweathermap.org/geo/1.0/direct") %>%
req_url_query(
q = city_name,
limit = 5,
appid = api_key
) %>%
req_perform()
# Set your API key and city
city_name <- "San Luis Obispo"
# Build and send the request
url <- paste0(
"http://api.openweathermap.org/geo/1.0/direct?q=",
URLencode(city_name),
"&limit=5&appid=",
api_key
)
# Parse the JSON into a list
content_list <- resp_body_json(response)
url <- paste0(
"http://api.openweathermap.org/geo/1.0/direct?q=",
URLencode(city_name),
"&limit=5&appid=",
api_key
)
response <- GET(url)
# Parse the JSON into a list
content_list <- resp_body_json(response)
View(response)
url <- paste0(
"http://api.openweathermap.org/geo/1.0/direct?q=",
URLencode(city_name),
"&limit=5&appid=",
api_key
)
response <- GET(url)
if (status_code(response) == 200) {
# Parse content
content_list <- content(response, as = "parsed", type = "application/json")
# Convert to dataframe
geo_df <- as.data.frame(do.call(rbind, lapply(content_list, as.data.frame)))
print(geo_df)
} else {
print(paste("Error:", status_code(response)))
}
# Parse the JSON into a list
content_list <- resp_body_json(response)
View(geo_df)
lat <- geo_content[[1]]$lat
lat <- geo_df[[1]]$lat
lat <- geo_df[1]$lat
lon <- geo_df[1]$lon
lat <- geo_df[2]$lat
lon <- geo_df[1]$lon
lat <- geo_df[,1]$lat
lat <- geo_df$lat
lon <- geo_df[1]$lon
lat <- geo_df$lat
lon <- geo_df$lon
lat <- geo_df$lat
lon <- geo_df$lon
url <- paste0(
"https://api.openweathermap.org/data/2.5/weather?",
URLencode(city_name),
"appid=",
api_key
)
library(httr2)
library(tibble)
api_key <- "535c5f77ac8d68d441227811cd74308e"
# Set your API key and city
city_name <- "San Luis Obispo"
# Build and send the request
response <- request("http://api.openweathermap.org/geo/1.0/direct") %>%
req_url_query(
q = city_name,
limit = 5,
appid = api_key
) %>%
req_perform()
url <- paste0(
"http://api.openweathermap.org/geo/1.0/direct?q=",
URLencode(city_name),
"&limit=5&appid=",
api_key
)
response <- GET(url)
if (status_code(response) == 200) {
# Parse content
content_list <- content(response, as = "parsed", type = "application/json")
# Convert to dataframe
geo_df <- as.data.frame(do.call(rbind, lapply(content_list, as.data.frame)))
print(geo_df)
} else {
print(paste("Error:", status_code(response)))
}
lat <- geo_df$lat
lon <- geo_df$lon
url2 <- paste0(
"https://api.openweathermap.org/data/2.5/weather?",
URLencode(city_name),
"appid=",
api_key
)
response <- GET(url2)
lat <- geo_df$lat
lon <- geo_df$lon
url2 <- paste0(
"https://api.openweathermap.org/data/2.5/weather?",
URLencode(city_name),
"appid=",
api_key
)
response2 <- GET(url2)
View(content_list)
View(content_list)
View(geo_df)
View(response2)
lat <- geo_df$lat
lon <- geo_df$lon
url2 <- paste0(
"https://api.openweathermap.org/data/2.5/weather",
URLencode(city_name),
"appid=",
api_key
)
response2 <- GET(url2)
View(response2)
current_weather_url <- "https://api.openweathermap.org/data/2.5/weather"
current_query <- list(q = "Seoul", appid = api_key, units = "metric")
response <- GET(current_weather_url, query = current_query)
http_type(response)
json_result <- content(response, as = "parsed")
class(json_result)
weather <- c()
visibility <- c()
temp <- c()
temp_min <- c()
temp_max <- c()
pressure <- c()
humidity <- c()
wind_speed <- c()
wind_deg <- c()
weather <- c(weather, json_result$weather[[1]]$main)
# Get Visibility
visibility <- c(visibility, json_result$visibility)
# Get current temperature
temp <- c(temp, json_result$main$temp)
# Get min temperature
temp_min <- c(temp_min, json_result$main$temp_min)
# Get max temperature
temp_max <- c(temp_max, json_result$main$temp_max)
# Get pressure
pressure <- c(pressure, json_result$main$pressure)
# Get humidity
humidity <- c(humidity, json_result$main$humidity)
# Get wind speed
wind_speed <- c(wind_speed, json_result$wind$speed)
# Get wind direction
wind_deg <- c(wind_deg, json_result$wind$deg)
weather_data_frame <- data.frame(
weather = weather,
visibility = visibility,
temp = temp,
temp_min = temp_min,
temp_max = temp_max,
pressure = pressure,
humidity = humidity,
wind_speed = wind_speed,
wind_deg = wind_deg
)
View(weather_data_frame)
name <- c()
weather <- c()
visibility <- c()
temp <- c()
temp_min <- c()
temp_max <- c()
pressure <- c()
humidity <- c()
wind_speed <- c()
wind_deg <- c()
name <- c(name, json_result$name)
weather <- c(weather, json_result$weather[[1]]$main)
# Get Visibility
visibility <- c(visibility, json_result$visibility)
# Get current temperature
temp <- c(temp, json_result$main$temp)
# Get min temperature
temp_min <- c(temp_min, json_result$main$temp_min)
# Get max temperature
temp_max <- c(temp_max, json_result$main$temp_max)
# Get pressure
pressure <- c(pressure, json_result$main$pressure)
# Get humidity
humidity <- c(humidity, json_result$main$humidity)
# Get wind speed
wind_speed <- c(wind_speed, json_result$wind$speed)
# Get wind direction
wind_deg <- c(wind_deg, json_result$wind$deg)
weather_data_frame <- data.frame(
weather = weather,
visibility = visibility,
temp = temp,
temp_min = temp_min,
temp_max = temp_max,
pressure = pressure,
humidity = humidity,
wind_speed = wind_speed,
wind_deg = wind_deg
)
name <- c()
weather <- c()
visibility <- c()
temp <- c()
temp_min <- c()
temp_max <- c()
pressure <- c()
humidity <- c()
wind_speed <- c()
wind_deg <- c()
name <- c(name, json_result$name)
weather <- c(weather, json_result$weather[[1]]$main)
# Get Visibility
visibility <- c(visibility, json_result$visibility)
# Get current temperature
temp <- c(temp, json_result$main$temp)
# Get min temperature
temp_min <- c(temp_min, json_result$main$temp_min)
# Get max temperature
temp_max <- c(temp_max, json_result$main$temp_max)
# Get pressure
pressure <- c(pressure, json_result$main$pressure)
# Get humidity
humidity <- c(humidity, json_result$main$humidity)
# Get wind speed
wind_speed <- c(wind_speed, json_result$wind$speed)
# Get wind direction
wind_deg <- c(wind_deg, json_result$wind$deg)
weather_data_frame <- data.frame(
name = name
weather = weather,
name <- c()
weather <- c()
visibility <- c()
temp <- c()
temp_min <- c()
temp_max <- c()
pressure <- c()
humidity <- c()
wind_speed <- c()
wind_deg <- c()
name <- c(name, json_result$name)
weather <- c(weather, json_result$weather[[1]]$main)
# Get Visibility
visibility <- c(visibility, json_result$visibility)
# Get current temperature
temp <- c(temp, json_result$main$temp)
# Get min temperature
temp_min <- c(temp_min, json_result$main$temp_min)
# Get max temperature
temp_max <- c(temp_max, json_result$main$temp_max)
# Get pressure
pressure <- c(pressure, json_result$main$pressure)
# Get humidity
humidity <- c(humidity, json_result$main$humidity)
# Get wind speed
wind_speed <- c(wind_speed, json_result$wind$speed)
# Get wind direction
wind_deg <- c(wind_deg, json_result$wind$deg)
weather_data_frame <- data.frame(
name = name,
weather = weather,
visibility = visibility,
temp = temp,
temp_min = temp_min,
temp_max = temp_max,
pressure = pressure,
humidity = humidity,
wind_speed = wind_speed,
wind_deg = wind_deg
)
View(weather_data_frame)
curr_weather <- function(city){
current_weather_url <- "https://api.openweathermap.org/data/2.5/weather"
current_query <- list(q = city, appid = api_key, units = "metric")
response <- GET(current_weather_url, query = current_query)
http_type(response)
json_result <- content(response, as = "parsed")
class(json_result)
name <- c()
weather <- c()
visibility <- c()
temp <- c()
temp_min <- c()
temp_max <- c()
pressure <- c()
humidity <- c()
wind_speed <- c()
wind_deg <- c()
name <- c(name, json_result$name)
weather <- c(weather, json_result$weather[[1]]$main)
# Get Visibility
visibility <- c(visibility, json_result$visibility)
# Get current temperature
temp <- c(temp, json_result$main$temp)
# Get min temperature
temp_min <- c(temp_min, json_result$main$temp_min)
# Get max temperature
temp_max <- c(temp_max, json_result$main$temp_max)
# Get pressure
pressure <- c(pressure, json_result$main$pressure)
# Get humidity
humidity <- c(humidity, json_result$main$humidity)
# Get wind speed
wind_speed <- c(wind_speed, json_result$wind$speed)
# Get wind direction
wind_deg <- c(wind_deg, json_result$wind$deg)
weather_data_frame <- data.frame(
name = name,
weather = weather,
visibility = visibility,
temp = temp,
temp_min = temp_min,
temp_max = temp_max,
pressure = pressure,
humidity = humidity,
wind_speed = wind_speed,
wind_deg = wind_deg
)
return(weather_data_frame)}
str(curr_weather("San Francisco"))
curr_weather <- function(city){
current_weather_url <- "https://api.openweathermap.org/data/2.5/weather"
current_query <- list(q = city, appid = api_key, units = "imperial")
response <- GET(current_weather_url, query = current_query)
http_type(response)
json_result <- content(response, as = "parsed")
class(json_result)
name <- c()
weather <- c()
visibility <- c()
temp <- c()
temp_min <- c()
temp_max <- c()
pressure <- c()
humidity <- c()
wind_speed <- c()
wind_deg <- c()
name <- c(name, json_result$name)
weather <- c(weather, json_result$weather[[1]]$main)
# Get Visibility
visibility <- c(visibility, json_result$visibility)
# Get current temperature
temp <- c(temp, json_result$main$temp)
# Get min temperature
temp_min <- c(temp_min, json_result$main$temp_min)
# Get max temperature
temp_max <- c(temp_max, json_result$main$temp_max)
# Get pressure
pressure <- c(pressure, json_result$main$pressure)
# Get humidity
humidity <- c(humidity, json_result$main$humidity)
# Get wind speed
wind_speed <- c(wind_speed, json_result$wind$speed)
# Get wind direction
wind_deg <- c(wind_deg, json_result$wind$deg)
weather_data_frame <- data.frame(
name = name,
weather = weather,
visibility = visibility,
temp = temp,
temp_min = temp_min,
temp_max = temp_max,
pressure = pressure,
humidity = humidity,
wind_speed = wind_speed,
wind_deg = wind_deg
)
return(weather_data_frame)}
str(curr_weather("San Francisco"))
library(httr2)
library(tibble)
library(jsonlite)
current_weather_url <- "https://api.openweathermap.org/data/2.5/weather"
current_query <- list(q = city_name, appid = api_key, units = "metric")
response <- GET(current_weather_url, query = current_query)
library(httr2)
library(tibble)
library(jsonlite)
library(httr)
current_weather_url <- "https://api.openweathermap.org/data/2.5/weather"
current_query <- list(q = city_name, appid = api_key, units = "metric")
response <- GET(current_weather_url, query = current_query)
http_type(response)
json_result <- content(response, as = "parsed")
class(json_result)
df <- fromJSON(json_result)
current_weather_url <- "https://api.openweathermap.org/data/2.5/weather"
current_query <- list(q = city_name, appid = api_key, units = "metric")
response <- GET(current_weather_url, query = current_query)
http_type(response)
json_result <- content(response, as = "parsed")
class(json_result)
df <- fromJSON(response)
current_weather_url <- "https://api.openweathermap.org/data/2.5/weather"
current_query <- list(q = city_name, appid = api_key, units = "metric")
response <- GET(current_weather_url, query = current_query)
http_type(response)
json_result <- content(response, as = "parsed")
class(json_result)
df <- fromJSON(response)
