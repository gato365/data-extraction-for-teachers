y = "Mean Score",
x = "Week") +
theme_custom()
plot_3b_data_df %>%
ggplot( aes(
x = week_str,
y = `Mean tm Score`,
group = season,
color = season
)) +
geom_line() +
geom_errorbar(aes(ymin = `Mean tm Score` - `SD tm Score`/sqrt(`Number of Games`),
ymax = `Mean tm Score` + `SD tm Score`/sqrt(`Number of Games`)),
width = 0.2) +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
plot_3a_data_df <- was_historical_df %>%
select(score_tm,week,season) %>%
mutate(score_tm = as.numeric(score_tm),
season = as.factor(season)
) %>%
filter(str_detect(week, "^[0-9]+$")) %>%
# mutate(week = fct_reorder(week, as.numeric(week))) %>%
mutate(week_str = str_glue("w #{week}")) %>%
mutate(week_str = fct_reorder(week_str, as.numeric(week)))
plot_3b_data_df <- plot_3a_data_df %>%
group_by(week,season) %>%
summarise(`Mean tm Score` = mean(score_tm, na.rm = TRUE),
`SD tm Score` = mean(score_tm, na.rm = TRUE),
`Number of Games`= n(),
.groups = "drop"
)
plot_3b_data_df %>%
ggplot( aes(
x = week_str,
y = `Mean tm Score`,
group = season,
color = season
)) +
geom_line() +
geom_errorbar(aes(ymin = `Mean tm Score` - `SD tm Score`/sqrt(`Number of Games`),
ymax = `Mean tm Score` + `SD tm Score`/sqrt(`Number of Games`)),
width = 0.2) +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
plot_3a_data_df <- was_historical_df %>%
select(score_tm,week,season) %>%
mutate(score_tm = as.numeric(score_tm),
season = as.factor(season)
) %>%
filter(str_detect(week, "^[0-9]+$")) %>%
# mutate(week = fct_reorder(week, as.numeric(week))) %>%
mutate(week_str = str_glue("w #{week}")) %>%
mutate(week_str = fct_reorder(week_str, as.numeric(week)))
plot_3b_data_df <- plot_3a_data_df %>%
group_by(week_str,season) %>%
summarise(`Mean tm Score` = mean(score_tm, na.rm = TRUE),
`SD tm Score` = mean(score_tm, na.rm = TRUE),
`Number of Games`= n(),
.groups = "drop"
)
plot_3b_data_df %>%
ggplot( aes(
x = week_str,
y = `Mean tm Score`,
group = season,
color = season
)) +
geom_line() +
geom_errorbar(aes(ymin = `Mean tm Score` - `SD tm Score`/sqrt(`Number of Games`),
ymax = `Mean tm Score` + `SD tm Score`/sqrt(`Number of Games`)),
width = 0.2) +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
plot_3b_data_df %>%
ggplot( aes(
x = season,
y = `Mean tm Score`,
color = week
)) +
geom_line() +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
plot_3b_data_df %>%
ggplot( aes(
x = season,
y = `Mean tm Score`,
color = week_str
)) +
geom_line() +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
plot_3b_data_df %>%
ggplot( aes(
x = week_str,
y = `Mean tm Score`
)) +
geom_line() +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
plot_3b_data_df %>%
filter(season == "2010") %>%
ggplot( aes(
x = week_str,
y = `Mean tm Score`
)) +
geom_line() +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
plot_3b_data_df %>%
filter(season == "2010") %>%
ggplot( aes(
x = week_str,
y = `Mean tm Score`,
group = week_str
)) +
geom_line() +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
plot_3b_data_df %>%
filter(season == "2010") %>%
ggplot( aes(
x = week_str,
y = `Mean tm Score`,
group = 1
)) +
geom_line() +
geom_point() +
labs(title = "Mean Team Scores by Week and Season",
y = "Mean Score",
x = "Week") +
theme_custom()
selected_season <-  "2021"
plot_3b_data_df %>%
filter(season == selected_season) %>%
ggplot( aes(
x = week_str,
y = `Mean tm Score`,
group = 1
)) +
geom_line() +
geom_point() +
labs(title = str_glue("Mean Team Scores by Week \n for the {selected_season} Season"),
y = "Mean Score",
x = "Week") +
theme_custom()
selected_seasons <- 2019:2021
plot_3b_data_df %>%
filter(season %in% selected_seasons) %>%
ggplot(aes(
x = week_str,
y = `Mean tm Score`,
color = season,
group = season
)) +
geom_line() +
geom_point() +
labs(title = str_glue("Mean Team Scores by Week \n {min(selected_seasons)}-{max(selected_seasons)} Seasons"),
y = "Mean Score",
x = "Week") +
theme_custom()
selected_seasons <- 2019:2021
plot_3a_data_df %>%
filter(season %in% selected_seasons) %>%
ggplot(aes(
x = week_str,
y = `Mean tm Score`,
color = season,
group = season
)) +
geom_line() +
geom_point() +
labs(title = str_glue("Mean Team Scores by Week \n {min(selected_seasons)}-{max(selected_seasons)} Seasons"),
y = "Mean Score",
x = "Week") +
theme_custom()
selected_seasons <- 2019:2021
plot_3b_data_df %>%
filter(season %in% selected_seasons) %>%
ggplot(aes(
x = week_str,
y = `Mean tm Score`,
color = season,
group = season
)) +
geom_line() +
geom_point() +
labs(title = str_glue("Mean Team Scores by Week \n {min(selected_seasons)}-{max(selected_seasons)} Seasons"),
y = "Mean Score",
x = "Week") +
theme_custom()
View(plot_3b_data_df)
shiny::runApp('team_weekly_performance_viz')
runApp('team_weekly_performance_viz')
runApp('team_weekly_performance_viz')
runApp('team_weekly_performance_viz')
runApp('team_weekly_performance_viz')
runApp('G:/My Drive/03_research_and_development/03_projects/C_finished_projects/project_07_time_series_1/time_series_analysis')
runApp('G:/My Drive/03_research_and_development/03_projects/C_finished_projects/project_07_time_series_1/time_series_analysis')
runApp('G:/My Drive/03_research_and_development/03_projects/C_finished_projects/project_07_time_series_1/time_series_analysis')
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(httr)
library(dplyr)
library(purrr)
## Createtion of URL
team_name <- "was"
year <- 2023
generic_url <- paste0("https://www.pro-football-reference.com/teams/",team_name,"/",year,".htm#all_games")
## Special Note 1: Maybe Optional (Further Research is needed on its relevance)
# request_details <- "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
# response <- GET(url, user_agent(request_details),timeout(20))
webpage <- generic_url %>%
rvest::read_html()
web_table <- webpage %>%
rvest::html_table() %>%
purrr::pluck(2) %>%
setNames(make.unique(ifelse(names(.) == "", "col", names(.))))
first_row <- web_table %>%
dplyr::slice(1)
mod_1_web_table <- web_table %>%
setNames(
purrr::map2_chr(
names(web_table),
first_row,
~if(startsWith(.x, "col")){.y} else {.x}
)
)
mod_2_web_table <- mod_1_web_table %>%
rename(
"Time" = 4,
"Boxoffice" = 5,
"Game Outcome" = 6,
"Game Location" = 9
)
mod_3_web_table <- mod_2_web_table |>
setNames(
purrr::map2_chr(
names(mod_2_web_table),
first_row,
~{
col_index <- match(.x, names(mod_2_web_table))
# For columns 11 onwards, combine names without creating duplicates
if(!is.na(col_index) && col_index >= 11) {
orig_name <- stringr::str_remove_all(.x, "[0-9_]") # Remove existing numbers/underscores
new_value <- stringr::str_remove_all(.y, "[0-9_]") # Clean the value too
paste(orig_name, new_value, sep = "_")
} else {
.x
}
}
)
) |>
dplyr::slice(-1) |>
janitor::clean_names()
View(mod_2_web_table)
mod_5_web_table <- mod_4_web_table  %>%
mutate(
game_outcome = as.factor(game_outcome),
game_location = case_when(
game_location == "@" ~ "away",
game_location == "" ~ "home",
TRUE ~ game_location
) %>%
as.factor()
) %>%
filter(day != "")
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(httr)
library(dplyr)
library(purrr)
## Createtion of URL
team_name <- "was"
year <- 2023
generic_url <- paste0("https://www.pro-football-reference.com/teams/",team_name,"/",year,".htm#all_games")
## Special Note 1: Maybe Optional (Further Research is needed on its relevance)
# request_details <- "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
# response <- GET(url, user_agent(request_details),timeout(20))
webpage <- generic_url %>%
rvest::read_html()
web_table <- webpage %>%
rvest::html_table() %>%
purrr::pluck(2) %>%
setNames(make.unique(ifelse(names(.) == "", "col", names(.))))
first_row <- web_table %>%
dplyr::slice(1)
mod_1_web_table <- web_table %>%
setNames(
purrr::map2_chr(
names(web_table),
first_row,
~if(startsWith(.x, "col")){.y} else {.x}
)
)
mod_2_web_table <- mod_1_web_table %>%
rename(
"Time" = 4,
"Boxoffice" = 5,
"Game Outcome" = 6,
"Game Location" = 9
)
mod_3_web_table <- mod_2_web_table |>
setNames(
purrr::map2_chr(
names(mod_2_web_table),
first_row,
~{
col_index <- match(.x, names(mod_2_web_table))
# For columns 11 onwards, combine names without creating duplicates
if(!is.na(col_index) && col_index >= 11) {
orig_name <- stringr::str_remove_all(.x, "[0-9_]") # Remove existing numbers/underscores
new_value <- stringr::str_remove_all(.y, "[0-9_]") # Clean the value too
paste(orig_name, new_value, sep = "_")
} else {
.x
}
}
)
) |>
dplyr::slice(-1) |>
janitor::clean_names()
View(mod_2_web_table)
mod_3_web_table <- mod_2_web_table |>
setNames(
purrr::map2_chr(
names(mod_2_web_table),
first_row,
~{
col_index <- match(.x, names(mod_2_web_table))
# For columns 11 onwards, combine names without creating duplicates
if(!is.na(col_index) && col_index >= 11) {
orig_name <- stringr::str_remove_all(.x, "[0-9_]") # Remove existing numbers/underscores
new_value <- stringr::str_remove_all(.y, "[0-9_]") # Clean the value too
paste(orig_name, new_value, sep = "_")
} else {
.x
}
}
)
) |>
dplyr::slice(-1)
mod_3_web_table <- mod_2_web_table |>
setNames(
purrr::map2_chr(
names(mod_2_web_table),
first_row,
~{
col_index <- match(.x, names(mod_2_web_table))
# For columns 11 onwards, combine names without creating duplicates
if(!is.na(col_index) && col_index >= 11) {
orig_name <- stringr::str_remove_all(.x, "[0-9_]") # Remove existing numbers/underscores
new_value <- stringr::str_remove_all(.y, "[0-9_]") # Clean the value too
paste(orig_name, new_value, sep = "_")
} else {
.x
}
}
)
)
View(mod_3_web_table)
View(mod_2_web_table)
View(mod_1_web_table)
View(web_table)
mod_3_web_table <- mod_2_web_table |>
setNames(
purrr::map2_chr(
names(mod_2_web_table),
first_row,
~{
col_index <- match(.x, names(mod_2_web_table))
# For columns 11 onwards, combine names without creating duplicates
if(!is.na(col_index) && col_index >= 11) {
orig_name <- stringr::str_remove_all(.x, "[0-9_]") # Remove existing numbers/underscores
new_value <- stringr::str_remove_all(.y, "[0-9_]") # Clean the value too
paste(orig_name, new_value, sep = "_")
} else {
.x
}
}
)
) |>
# dplyr::slice(-1) |>
janitor::clean_names()
View(mod_3_web_table)
mod_3_web_table <- mod_2_web_table |>
setNames(
purrr::map2_chr(
names(mod_2_web_table),
first_row,
~{
col_index <- match(.x, names(mod_2_web_table))
# For columns 11 onwards, combine names without creating duplicates
if(!is.na(col_index) && col_index >= 11) {
orig_name <- stringr::str_remove_all(.x, "[0-9_]") # Remove existing numbers/underscores
new_value <- stringr::str_remove_all(.y, "[0-9_]") # Clean the value too
paste(orig_name, new_value, sep = "_")
} else {
.x
}
}
)
)
mod_3_web_table %>%
dplyr::slice(-1) |>
janitor::clean_names()
mod_3_web_table <- mod_2_web_table |>
setNames(
purrr::map2_chr(
names(mod_2_web_table),
first_row,
~{
col_index <- match(.x, names(mod_2_web_table))
# For columns 11 onwards, combine names without creating duplicates
if(!is.na(col_index) && col_index >= 11) {
orig_name <- stringr::str_remove_all(.x, "[0-9_]") # Remove existing numbers/underscores
new_value <- stringr::str_remove_all(.y, "[0-9_]") # Clean the value too
paste(orig_name, new_value, sep = "_")
} else {
.x
}
}
)
)
mod_3_web_table <- mod_2_web_table |>
setNames(
purrr::map2_chr(
names(mod_2_web_table),
first_row,
~{
col_index <- match(.x, names(mod_2_web_table))
# For columns 11 onwards, combine names without creating duplicates
if(!is.na(col_index) && col_index >= 11) {
orig_name <- stringr::str_remove_all(.x, "[0-9_]") # Remove existing numbers/underscores
new_value <- stringr::str_remove_all(.y, "[0-9_]") # Clean the value too
paste(orig_name, new_value, sep = "_")
} else {
.x
}
}
)
)  |>
# dplyr::slice(-1) |>
janitor::clean_names()
knitr::opts_chunk$set(echo = TRUE)
## Createtion of URL
team_name <- "was"
year <- 2023
generic_url <- paste0("https://www.pro-football-reference.com/teams/",team_name,"/",year,".htm#all_games")
generic_url
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(httr)
library(dplyr)
library(purrr)
## Createtion of URL
team_name <- "was"
year <- 2023
generic_url <- paste0("https://www.pro-football-reference.com/teams/",team_name,"/",year,".htm#all_games")
webpage <- generic_url %>%
rvest::read_html()
web_table <- webpage %>%
rvest::html_table() %>%
purrr::pluck(2) %>%
setNames(make.unique(ifelse(names(.) == "", "col", names(.))))
View(webpage)
webpage[[1]]
webpage[[2]]
webpage <- generic_url %>%
rvest::read_html()
web_table <- webpage %>%
rvest::html_table()
web_tables <- webpage %>%
rvest::html_table()
web_table <- web_tables %>%
purrr::pluck(2) %>%
setNames(make.unique(ifelse(names(.) == "", "col", names(.))))
web_table <- web_tables %>%
purrr::pluck(2) %>%
setNames(make.unique(if_else(names(.) == "", "col", names(.))))
int_web_table <- web_tables %>%
purrr::pluck(2)
int_web_table <- web_tables %>%
purrr::pluck(2)
web_table <- int_web_table %>%
setNames(make.unique(if_else(names(.) == "", "col", names(.))))
View(web_table)
View(int_web_table)
